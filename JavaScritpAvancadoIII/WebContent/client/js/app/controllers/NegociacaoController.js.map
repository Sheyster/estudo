{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","err","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastrar","mensagem","importa","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from \"../models/ListaNegociacoes\";\r\nimport { Mensagem } from \"../models/Mensagem\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\nimport { NegociacoesView } from \"../views/NegociacoesView\";\r\nimport { MensagemView } from \"../views/MensagemView\";\r\nimport { NegociacaoService } from \"../services/NegociacaoService\";\r\nimport { DateHelper } from \"../helpers/DateHelper\";\r\nimport { Bind } from \"../helpers/Bind\";\r\n\r\nclass NegociacaoController {\r\n\r\n\tconstructor() { // para garantir que vamos buscar o DOM somente uma vez e não sempre que o método for chamado\r\n\t\tlet $ = document.querySelector.bind(document); // Neste caso let $ = document.querySelector; como o querySelector é imutavel não daria para ser utiilizado por isso\r\n\t\t// alteramos para o atual, garantindo a associação com document\r\n\r\n\t\tthis._inputData = $(\"#data\");\r\n\t\tthis._inputQuantidade = $(\"#quantidade\");\r\n\t\tthis._inputValor = $(\"#valor\");\r\n\r\n\t\tthis._listaNegociacoes = new Bind(new ListaNegociacoes(), new NegociacoesView($(\"#negociacoesView\")), \"adiciona\", \"esvazia\", \"ordena\", \"inverteOrdem\");\r\n\t\t// ProxyFactory.create(new ListaNegociacoes(), [\"adiciona\", \"esvazia\"], model => this._negociacoesView.update(model));\r\n\r\n\t\tthis._mensagem = new Bind(new Mensagem(), new MensagemView($(\"#mensagemView\")), \"texto\");\r\n\t\t// ProxyFactory.create(new Mensagem(), [\"texto\"], (model) => this._mensagemView.update(model));\r\n\r\n\t\tthis._ordemAtual = '';\r\n\t\tthis._service = new NegociacaoService();\r\n\t\tthis._init();\r\n\t}\r\n\r\n\t_init() {\r\n\t\tthis._service\r\n\t\t\t.lista()\r\n\t\t\t.then(negociacoes =>\r\n\t\t\t\tnegociacoes.forEach(negociacao =>\r\n\t\t\t\t\tthis._listaNegociacoes.adiciona(negociacao)))\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis._mensagem.texto = err;\r\n\t\t\t});\r\n\r\n\t\t// Outra forma de fazer a mesma coisa abaixo.\r\n\t\t// ConnectionFactory.getConnection()\r\n\t\t// \t.then(connection => new NegociacaoDao(connection))\r\n\t\t// \t.then(dao => dao.listaTodos())\r\n\t\t// \t.then(negociacoes => negociacoes\r\n\t\t// \t\t.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao)))\r\n\t\t// \t.catch(err => {\r\n\t\t// \t\tconsole.log(err);\r\n\t\t// \t\tthis._mensagem.texto = err;\r\n\t\t// \t});\r\n\r\n\t\t// ConnectionFactory.getConnection().then(connection => {\r\n\t\t// \tnew NegociacaoDao(connection).listaTodos().then(negociacoes => {\r\n\t\t// \t\tthis._listaNegociacoes.adiciona(negociacoes);\r\n\t\t// \t});\r\n\t\t// });\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.importaNegociacoes();\r\n\t\t}, 9000);\r\n\t}\r\n\r\n\tadiciona(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet negociacao = this._criaNegociacao();\r\n\t\tthis._service\r\n\t\t\t.cadastrar(negociacao)\r\n\t\t\t.then(mensagem => {\r\n\t\t\t\tthis._listaNegociacoes.adiciona(negociacao);\r\n\t\t\t\tthis._mensagem.texto = mensagem;\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tthis._mensagem.texto = err;\r\n\t\t\t});\r\n\t}\r\n\r\n\timportaNegociacoes() {\r\n\t\tthis._service\r\n\t\t\t.importa(this._listaNegociacoes.negociacoes)\r\n\t\t\t.then(negociacoes => negociacoes.forEach(negociacao => {\r\n\t\t\t\tthis._listaNegociacoes.adiciona(negociacao);\r\n\t\t\t\tthis._mensagem.texto = 'Negociação do periodo importada,';\r\n\t\t\t}))\r\n\t\t\t.catch(err => this._mensagem.texto = err);\r\n\r\n\t\t/*\r\n\t\t * let promise = service.obterNegociacoesDaSemana(); promise.then(negociacoes => { negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n\t\t * this._mensagem.texto = \"Negociações importadas com sucesso!\"; }) .catch(err => this._mensagem.texto = err);\r\n\t\t */\r\n\r\n\t\t/*\r\n\t\t * service.obterNegociacoesDaSemana((err, negociacoes) => { if(err) { this._mensagem.texto = err; return; }\r\n\t\t * \r\n\t\t * negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao)); this._mensagem.texto = \"Negociações importadas com sucesso!\"; });\r\n\t\t */\r\n\t}\r\n\r\n\tapaga() {\r\n\t\tthis._service\r\n\t\t\t.apaga()\r\n\t\t\t.then(mensagem => {\r\n\t\t\t\tthis._mensagem.texto = mensagem;\r\n\t\t\t\tthis._listaNegociacoes.esvazia();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis._mensagem.texto = err;\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\t_criaNegociacao() {\r\n\t\treturn new Negociacao(DateHelper.textoParaData(this._inputData.value), parseInt(this._inputQuantidade.value), parseFloat(this._inputValor.value));\r\n\t}\r\n\t_limpaFormulario() {\r\n\t\tthis._inputData.value = \"\";\r\n\t\tthis._inputQuantidade.value = 1;\r\n\t\tthis._inputValor.value = 0.0;\r\n\r\n\t\tthis._inputData.focus();\r\n\t}\r\n\r\n\tordena(coluna) {\r\n\t\t// ainda vamos implementar o método!\r\n\t\tconsole.log(\"Testando ordenação\" + coluna);\r\n\t\tif (this._ordemAtual == coluna) {\r\n\t\t\t// inverte a ordem da lista!\r\n\t\t\tthis._listaNegociacoes.inverteOrdem();\r\n\t\t} else {\r\n\t\t\tthis._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n\t\t}\r\n\t\tthis._ordemAtual = coluna;\r\n\t}\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n\treturn negociacaoController;\r\n}"]}