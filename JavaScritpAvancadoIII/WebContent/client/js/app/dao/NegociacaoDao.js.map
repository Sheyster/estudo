{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC;AACA;AACA;AACA;;AAEA,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,MAAKP,MAA1E,EAAkFQ,GAAlF,CAAsFP,UAAtF,CAAd;;AAEAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACAO,4BAAQC,GAAR,CAAY,kCAAZ;AACH,iBAHD;;AAKAN,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAlBM,CAAP;AAmBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkFiB,UAAlF,EAAb;AACA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAW;AACP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,8BAAMS,QAAN;AACH,qBALD,MAKO;AACHzB,gCAAQe,WAAR;AACH;AACJ,iBAXD;;AAaAF,uBAAOJ,OAAP,GAAiB,aAAK;AAClBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAtBM,CAAP;AAuBH;;;sCAEa;AAAA;;AACV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkF6B,KAAlF,EAAd;;AAEAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,oCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aATM,CAAP;AAWH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // pode ser feito desta forma ou da forma sequinte encadeando.\r\n            //let transaction = this._connection.transaction([this._store], 'readwrite');\r\n            //let store = transaction.objectStore(this._store);\r\n            //let request = store.add(negociacao);\r\n\r\n            let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n                console.log('Negociação incluida com sucesso!');\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negocição.');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).openCursor();\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível listar as negociações!');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagarTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações removidas com sucesso!');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível remover as negociações');\r\n            }\r\n        });\r\n\r\n    }\r\n}"]}