{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","console","log","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","err","reject","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\tobterNegociacoesDaSemana() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/semana\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes);\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana\");\r\n\t\t\t});\r\n\t\t/*\r\n\t\t * return new Promise((resolve, reject) => {\r\n\t\t * \r\n\t\t * let xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"negociacoes/semana\");\r\n\t\t * \r\n\t\t * xhr.onreadystatechange = () => {\r\n\t\t * \r\n\t\t * 0: requisição ainda não iniciada\r\n\t\t * \r\n\t\t * 1: conexão com o servidor estabelecidad\r\n\t\t * \r\n\t\t * 2: requisição recebida\r\n\t\t * \r\n\t\t * 3: processando requisição\r\n\t\t * \r\n\t\t * 4: requisição concluida e a resposta esta pronta\r\n\t\t * \r\n\t\t * if(xhr.readyState == 4){ if(xhr.status == 200){ console.log(\"Obtendo as negociações do servidor.\"); console.log(JSON.parse(xhr.responseText));\r\n\t\t * \r\n\t\t * resolve(JSON.parse(xhr.responseText).map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))); } else { console.log(\"Não foi possível obter\r\n\t\t * as negociações do servidor.\"); console.log(xhr.responseText); reject(\"Não foi possível obter as negociações.\") } } };\r\n\t\t * \r\n\t\t * xhr.send(); });\r\n\t\t */\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/anterior\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes);\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana anterior\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/retrasada\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes)\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana retrasada\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoes() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis.obterNegociacoesDaSemana(),\r\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\r\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\r\n\t\t]).then(periodos => {\r\n\t\t\tlet negociacoes = periodos\r\n\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), [])\r\n\t\t\t\t.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\r\n\t\t\treturn negociacoes;\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t}\r\n\r\n\tcadastrar(negociacao) {\r\n\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Não doi possível adicionar a negociação')\r\n\t\t\t});\r\n\t}\r\n\r\n\tlista() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.listaTodos())\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Nao foi possivel obter as negociacoes!');\r\n\t\t\t});\r\n\t}\r\n\r\n\tapaga() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagarTodos())\r\n\t\t\t.then(mensagem => 'Negociacoes apagadas com sucesso!')\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Nao foi possivel apagar as negociacoes!');\r\n\t\t\t});\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.obterNegociacoes()\r\n\t\t\t.then(negociacoes =>\r\n\t\t\t\tnegociacoes.filter(negociacao =>\r\n\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\r\n\t\t\t\t\t\tJSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n\t\t\t)\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Não foi possível buscar as negociações para importar');\r\n\t\t\t});\r\n\r\n\t\t// Promise.all([this._service.obterNegociacoesDaSemana(), this._service.obterNegociacoesDaSemanaAnterior(), service.obterNegociacoesDaSemanaRetrasada()])\r\n\t\t// \t.then(negociacoes =>\r\n\t\t// \t\tnegociacoes.filter(negociacao =>\r\n\t\t// \t\t\t!this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\r\n\t\t// \t\t\t\tJSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n\t\t// \t)\r\n\t\t// \t.then(negociacoes => negociacoes.forEach(negociacao => {\r\n\t\t// \t\tthis._listaNegociacoes.adiciona(negociacao);\r\n\t\t// \t\tthis._mensagem.texto = 'Negociação do periodo importada,';\r\n\t\t// \t}))\r\n\t\t// \t.catch(err => this._mensagem.texto = err);\r\n\t}\r\n}"]}