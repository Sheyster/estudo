{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","err","reject","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\tobterNegociacoesDaSemana() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/semana\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes);\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana\");\r\n\t\t\t});\r\n\t\t/*\r\n\t\t * return new Promise((resolve, reject) => {\r\n\t\t * \r\n\t\t * let xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"negociacoes/semana\");\r\n\t\t * \r\n\t\t * xhr.onreadystatechange = () => {\r\n\t\t * \r\n\t\t * 0: requisição ainda não iniciada\r\n\t\t * \r\n\t\t * 1: conexão com o servidor estabelecidad\r\n\t\t * \r\n\t\t * 2: requisição recebida\r\n\t\t * \r\n\t\t * 3: processando requisição\r\n\t\t * \r\n\t\t * 4: requisição concluida e a resposta esta pronta\r\n\t\t * \r\n\t\t * if(xhr.readyState == 4){ if(xhr.status == 200){ console.log(\"Obtendo as negociações do servidor.\"); console.log(JSON.parse(xhr.responseText));\r\n\t\t * \r\n\t\t * resolve(JSON.parse(xhr.responseText).map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))); } else { console.log(\"Não foi possível obter\r\n\t\t * as negociações do servidor.\"); console.log(xhr.responseText); reject(\"Não foi possível obter as negociações.\") } } };\r\n\t\t * \r\n\t\t * xhr.send(); });\r\n\t\t */\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/anterior\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes);\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana anterior\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\t\treturn this._http\r\n\t\t\t.get(\"negociacoes/retrasada\")\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\tconsole.log(negociacoes)\r\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treject(\"Não foi possivel obter as negociações da semana retrasada\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoes() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis.obterNegociacoesDaSemana(),\r\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\r\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\r\n\t\t]).then(periodos => {\r\n\t\t\tlet negociacoes = periodos\r\n\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), [])\r\n\t\t\t\t.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\r\n\t\t\treturn negociacoes;\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthrow new Error(err);\r\n\t\t});\r\n\t}\r\n\r\n\tcadastrar(negociacao) {\r\n\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Não doi possível adicionar a negociação')\r\n\t\t\t});\r\n\t}\r\n\r\n\tlista() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.listaTodos())\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Nao foi possivel obter as negociacoes!');\r\n\t\t\t});\r\n\t}\r\n\r\n\tapaga() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagarTodos())\r\n\t\t\t.then(mensagem => 'Negociacoes apagadas com sucesso!')\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Nao foi possivel apagar as negociacoes!');\r\n\t\t\t});\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.obterNegociacoes()\r\n\t\t\t.then(negociacoes =>\r\n\t\t\t\tnegociacoes.filter(negociacao =>\r\n\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\r\n\t\t\t\t\t\tJSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n\t\t\t)\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthrow new Error('Não foi possível buscar as negociações para importar');\r\n\t\t\t});\r\n\r\n\t\t// Promise.all([this._service.obterNegociacoesDaSemana(), this._service.obterNegociacoesDaSemanaAnterior(), service.obterNegociacoesDaSemanaRetrasada()])\r\n\t\t// \t.then(negociacoes =>\r\n\t\t// \t\tnegociacoes.filter(negociacao =>\r\n\t\t// \t\t\t!this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\r\n\t\t// \t\t\t\tJSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n\t\t// \t)\r\n\t\t// \t.then(negociacoes => negociacoes.forEach(negociacao => {\r\n\t\t// \t\tthis._listaNegociacoes.adiciona(negociacao);\r\n\t\t// \t\tthis._mensagem.texto = 'Negociação do periodo importada,';\r\n\t\t// \t}))\r\n\t\t// \t.catch(err => this._mensagem.texto = err);\r\n\t}\r\n}"]}