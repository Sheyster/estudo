{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;IAAMA,U;AAEL,uBAAc;AAAA;;AACb,QAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACA;;;;gCAEoBC,I,EAAM;AAC1B,UAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACA;AACF;AACE;;;gCAEoBC,K,EAAO;AAC3B;AACA,OAAG,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAJ,EAAsC;AACrC,UAAM,IAAIL,KAAJ,CAAU,0CAAV,CAAN;AACA;AACA;AACD,6CAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,WAAkBD,OAAOC,SAAS,CAAlC;AAAA,IAA/B,CAAnB;AACA","file":"DateHelper.js","sourcesContent":["class DateHelper {\r\n\t\r\n\tconstructor() {\r\n\t\tthrow new Error(\"DateHelper não pode ser instânciada!\");\r\n\t}\r\n\t\r\n\tstatic dataParaTexto(data) {\r\n\t\treturn `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n\t\t// outra forma de escrever o mesmo código abaixo! Utilizando \"template string\"\r\n// return data.getDate() + \"/\" + (data.getMonth() + 1) + \"/\" + data.getFullYear();\r\n\t}\r\n\t\r\n\tstatic textoParaData(texto) {\r\n\t\t// Expressão regular\r\n\t\tif(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto)){\r\n\t\t\tthrow new Error(\"A data deve estar no formado aaaa-mm-dd!\");\r\n\t\t}\r\n\t\t // veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.\r\n\t\treturn new Date(...texto.split(\"/\").reverse().map((item, indice) => item - indice % 2));\r\n\t}\r\n}"]}